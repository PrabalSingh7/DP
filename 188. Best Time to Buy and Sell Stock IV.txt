188. Best Time to Buy and Sell Stock IV
Hard
6.2K
196
Companies
You are given an integer array prices where prices[i] is the price of a given stock on the ith day, and an integer k.

Find the maximum profit you can achieve. You may complete at most k transactions.

Note: You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).

 

Example 1:

Input: k = 2, prices = [2,4,1]
Output: 2
Explanation: Buy on day 1 (price = 2) and sell on day 2 (price = 4), profit = 4-2 = 2.
Example 2:

Input: k = 2, prices = [3,2,6,5,0,3]
Output: 7
Explanation: Buy on day 2 (price = 2) and sell on day 3 (price = 6), profit = 6-2 = 4. Then buy on day 5 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.
 

Constraints:

1 <= k <= 100
1 <= prices.length <= 1000
0 <= prices[i] <= 1000
Accepted
348.5K
Submissions
898.1K
Acceptance Rate
38.8%






class Solution {
public:
    //  Tabulation + SPace Optimization
    int maxProfit(int k, vector<int>& Arr) {
        int n = Arr.size();
        vector<vector<int>> prev (2,vector<int>(k+1,0));
        vector<vector<int>> curr (2,vector<int>(k+1,0));
        
        for(int ind = n-1; ind>=0; ind--){
            for(int buy = 0; buy<=1; buy++){
                for(int cap=1; cap<=k; cap++){
                    
                    if(buy==0){// We can buy the stock
                        curr[buy][cap] = max(0+prev[0][cap], 
                                    -Arr[ind] + prev[1][cap]);
                    }
        
                    if(buy==1){// We can sell the stock
                        curr[buy][cap] = max(0+prev[1][cap],
                                    Arr[ind] + prev[0][cap-1]);
                    }
                }
            }
            prev = curr;
        }
        
        
        return prev[0][k];
    }
};