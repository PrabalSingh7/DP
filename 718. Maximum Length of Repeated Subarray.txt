718. Maximum Length of Repeated Subarray
Medium
6.1K
151
Companies
Given two integer arrays nums1 and nums2, return the maximum length of a subarray that appears in both arrays.

 

Example 1:

Input: nums1 = [1,2,3,2,1], nums2 = [3,2,1,4,7]
Output: 3
Explanation: The repeated subarray with maximum length is [3,2,1].
Example 2:

Input: nums1 = [0,0,0,0,0], nums2 = [0,0,0,0,0]
Output: 5
Explanation: The repeated subarray with maximum length is [0,0,0,0,0].
 

Constraints:

1 <= nums1.length, nums2.length <= 1000
0 <= nums1[i], nums2[i] <= 100
Accepted
261.9K
Submissions
511K
Acceptance Rate
51.2%



class Solution {
public:
    int findLength(vector<int>& nums1, vector<int>& nums2) {
        int n = nums1.size();
        int m = nums2.size();
        int res = 0;

        vector<vector<int>> dp (n+1, vector<int> (m+1,0));

        for(int i=1; i<=n; i++) {
            for(int j=1; j<=m; j++) {
                if(nums1[i-1]==nums2[j-1])  {
                    int prevN = i-2>=0 ? nums1[i-2] : -1;
                    int prevM = j-2>=0 ? nums2[j-2] : -1;

                    if(prevN==prevM)    
                        dp[i][j] = 1 + dp[i-1][j-1];
                    else 
                        dp[i][j] = 1;
                }
                else 
                    dp[i][j] = 0;

                res = max(res,dp[i][j]);
            }
        }
        
        return res;
    }
};